<?xml version="1.0"?>
<project
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.ftpix.homedash</groupId>
        <artifactId>homedash</artifactId>
        <version>2021.1</version>
    </parent>


    <artifactId>web</artifactId>
    <name>web</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <main.class>com.ftpix.homedash.app.App</main.class>
        <native.dir>lib/native</native.dir>
        <project.build.scriptSourceDirectory>startup-scripts</project.build.scriptSourceDirectory>
        <docker.skip>true</docker.skip>
        <docker.image.name>gonzague/homedash</docker.image.name>
    </properties>

    <scm>
        <url>https://github.com/lamarios/Homedash2</url>
        <connection>scm:git:https://github.com/lamarios/Homedash2.git</connection>
        <developerConnection>scm:git:git@github.com:lamarios/Homedash2.git</developerConnection>
    </scm>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.sparkjava</groupId>
            <artifactId>spark-core</artifactId>
            <version>${spark.version}</version>
        </dependency>


        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.16.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.17.1</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.21</version>
        </dependency>
        <dependency>
            <groupId>com.sparkjava</groupId>
            <artifactId>spark-template-jade</artifactId>
            <version>${spark.template.version}</version>
        </dependency>

        <dependency>
            <groupId>io.gsonfire</groupId>
            <artifactId>gson-fire</artifactId>
            <version>1.5.1</version>
        </dependency>

        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz-jobs</artifactId>
            <version>2.2.2</version>
        </dependency>
        <dependency>
            <groupId>com.sparkjava</groupId>
            <artifactId>spark-debug-tools</artifactId>
            <version>0.5</version>
        </dependency>
        <dependency>
            <groupId>com.mashape.unirest</groupId>
            <artifactId>unirest-java</artifactId>
            <version>1.4.9</version>
        </dependency>


        <dependency>
            <groupId>com.ftpix.homedash</groupId>
            <artifactId>notifications</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ftpix.homedash</groupId>
            <artifactId>updater</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>jackson-databind</artifactId>
                    <groupId>com.fasterxml.jackson.core</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.lesscss</groupId>
            <artifactId>lesscss</artifactId>
            <version>1.7.0.1.1</version>
        </dependency>

        <!-- plugins -->
        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>systeminfo</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>docker</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>plex</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>sonarrtv</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>harddisk</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>transmission</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>pihole</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>portmapper</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>kvm</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>couchpotato</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>networkmonitor</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>dynamicdns</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>googlepubliccalendar</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>mma</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.ftpix.homedash</groupId>
            <artifactId>models</artifactId>
            <version>2021.1</version>
        </dependency>

        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>spotify</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>logreader</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>dockercompose</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ftpix.homedash.plugins</groupId>
            <artifactId>unifi</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>


    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
            </plugin>
            <plugin>
                <groupId>org.lesscss</groupId>
                <artifactId>lesscss-maven-plugin</artifactId>
                <configuration>
                    <sourceDirectory>${project.build.sourceDirectory}/assets/less</sourceDirectory>
                    <outputDirectory>${project.build.resources[0].directory}/web/css
                    </outputDirectory>
                    <compress>true</compress>
                    <includes>
                        <include>*.less</include>
                    </includes>
                    <excludes>
                        <exclude>variables.less</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- EXECUTE -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <!-- <execution> <id>copy-plugins-css</id> <phase>generate-resources</phase>
                        <goals> <goal>run</goal> </goals> <configuration> <tasks> <copy todir="src/main/resources/web/css/plugins"
                        flatten="true"> <fileset dir="../"> <include name="plugin-*/src/main/resources/web/css/*.css"
                        /> </fileset> </copy> </tasks> </configuration> </execution> <execution>
                        <id>copy-plugins-js</id> <phase>generate-resources</phase> <goals> <goal>run</goal>
                        </goals> <configuration> <tasks> <copy todir="src/main/resources/web/js/plugins"
                        flatten="true"> <fileset dir="../"> <include name="plugin-*/src/main/resources/web/js/*.js"
                        /> </fileset> </copy> </tasks> </configuration> </execution> -->
                    <execution>
                        <id>copy-plugin-js</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy todir="src/main/resources/web/js" overwrite="true">
                                    <fileset dir="src/main/java/assets/js">
                                        <include name="**/*"/>
                                    </fileset>
                                </copy>
                            </target>


                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-native</id>

                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <copy todir="src/main/resources/native-libs" flatten="true">

                                    <fileset dir="../">
                                        <include name="plugins/*/${native.dir}/*.*"/>
                                    </fileset>
                                </copy>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- Assembly -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4.1</version>
                <!-- The configuration of the plugin -->
                <executions>
                    <!--                    <execution>
                                            <configuration>
                                                &lt;!&ndash; Specifies the configuration file of the assembly plugin &ndash;&gt;
                                                <descriptors>
                                                    <descriptor>assembly.xml</descriptor>
                                                </descriptors>
                                            </configuration>
                                            <phase>package</phase>
                                            <goals>
                                                <goal>single</goal>
                                            </goals>
                                        </execution>-->
                    <execution>
                        <id>jar-with-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>Homedash-${project.version}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <archive>
                                <manifestEntries>
                                    <Multi-Release>true</Multi-Release>
                                </manifestEntries>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    <mainClass>com.ftpix.homedash.app.App</mainClass>
                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                    <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>de.jutzig</groupId>
                <artifactId>github-release-plugin</artifactId>
                <version>1.1.1</version>
                <configuration>
                    <description>
                        Fix issue where websocket will stop refresh
                    </description>
                    <releaseName>${version}</releaseName>
                    <tag>${version}</tag>
                    <serverId>github-release</serverId>
                    <!-- If your project has additional artifacts, such as ones produced by
                         the maven-assembly-plugin, you can define the following
                         (requires version 1.1.1 of the plugin or higher): -->
                    <fileSets>
                        <fileSet>
                            <directory>${project.build.directory}</directory>
                            <excludes>
                                <exclude>web*.jar</exclude>
                            </excludes>
                            <includes>
                                <include>Homedash-*.jar</include>
                            </includes>
                        </fileSet>
                    </fileSets>
                </configuration>
            </plugin>


            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- here the phase you need -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>docker/</directory>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>${basedir}/target/</directory>
                                    <includes>
                                        <include>Homedash-${version}.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- build docker image -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <configuration>
                    <workingDirectory>${basedir}/src/main/web</workingDirectory>
                </configuration>
                <executions>
                    <!-- BUILD DOCKER IMAGE -->
                    <execution>
                        <id>Docker pull base</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>
                            <skip>${docker.skip}</skip>
                            <workingDirectory>${basedir}/target/docker</workingDirectory>
                            <executable>docker</executable>
                            <arguments>
                                <argument>pull</argument>
                                <argument>openjdk:11.0.4-jre</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <configuration>
                    <workingDirectory>${basedir}/src/main/web</workingDirectory>
                </configuration>
                <executions>
                    <!-- BUILD DOCKER IMAGE -->
                    <execution>
                        <id>Docker build</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>
                            <skip>${docker.skip}</skip>
                            <workingDirectory>${basedir}/target/docker</workingDirectory>
                            <executable>docker</executable>
                            <arguments>
                                <argument>build</argument>
                                <argument>--no-cache</argument>
                                <argument>-t</argument>
                                <argument>${docker.image.name}:latest</argument>
                                <argument>-t</argument>
                                <argument>${docker.image.name}:${version}</argument>
                                <argument>.</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
